{"version":3,"sources":["components/Navbar/Navbar.js","components/Home/Home.js","components/Forms/Login.js","components/Forms/SignUp.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","React","createElement","className","NavLink","to","Home","Login","username","setUsername","useState","password","setPassword","isFormValid","trim","href","onSubmit","e","preventDefault","htmlFor","type","id","placeholder","value","onChange","target","disabled","SignUp","name","setName","async","event","axios","post","ok","alert","err","response","data","error","request","message","console","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.2d0469fa.chunk.js","sourcesContent":["import React from \"react\";\nimport { NavLink } from 'react-router-dom';\nimport \"./Navbar.css\";\n\nfunction Navbar() {\n    return (\n        <nav className=\"navbar\">\n            <div className=\"navbar-container\">\n                <NavLink to=\"/\" className=\"navbar-logo\">\n                    CyberHome\n                </NavLink>\n\n                <ul className=\"nav-menu\">\n                    <li className=\"nav-item\">\n                        <NavLink to=\"/login\" className=\"nav-links\">\n                            LOGIN\n                        </NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink to=\"/signup\" className=\"nav-links\">\n                            SIGN UP\n                        </NavLink>\n                    </li>\n                </ul>\n            </div>\n        </nav>\n    );\n}\n\nexport default Navbar;","import React from 'react';\nimport \"./Home.css\"\n\nfunction Home() {\n    return (\n        <div className='homepage'>\n            <h1>Welcome to CyberHome</h1>\n            <p>Here are the newest updates in the community!</p>\n        </div>\n    );\n}\n\nexport default Home;","import React, { useState } from 'react';\nimport './Form.css';\n\nconst Login = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const isFormValid = username.trim() !== '' && password.trim() !== '';\n\n    return (\n        <div className=\"form-container\">\n            <header className=\"form-header\">\n                <a href=\"/\" className=\"nav-link\">&larr; BACK</a>\n                <a href=\"/signup\" className=\"nav-link\">SIGN UP</a>\n            </header>\n            <div className=\"form-content\">\n                <h1>Log into CyberHome</h1>\n                <form className=\"form\" onSubmit={(e) => e.preventDefault()}>\n                    <label htmlFor=\"username\" className=\"form-label\">USERNAME</label>\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        className=\"form-input\"\n                        placeholder=\"Enter your username\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n                    <label htmlFor=\"password\" className=\"form-label\">PASSWORD</label>\n                    <div className=\"password-container\">\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            className=\"form-input\"\n                            placeholder=\"Password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n                    </div>\n                    <button\n                        type=\"submit\"\n                        className={`form-button ${isFormValid ? 'active' : ''}`}\n                        disabled={!isFormValid}\n                    >\n                        LOG IN\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n};\n\nexport default Login;","import React, { useState } from 'react';\nimport axios from 'axios';\nimport './Form.css';\n\nconst SignUp = () => {\n    const [name, setName] = useState('');\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const isFormValid = name.trim() !== '' && username.trim() !== '' && password.trim() !== '';\n\n    const handleSubmit = async (event) => {\n        event.preventDefault();\n\n        if (!isFormValid) {\n            alert('Please fill in all fields');\n            return;\n        }\n\n        try {\n            const response = await axios.post('/api/users/signup', {\n                name,\n                username,\n                password\n            });\n\n            // const response = await fetch('/api/users/signup', {\n            //     method: 'POST',\n            //     headers: {\n            //         'Content-Type': 'application/json',\n            //     },\n            //     body: JSON.stringify({ name, username, password })\n            // });\n\n            // const data = await response.json();\n\n            if (response.ok) {\n                alert('Signup successful!');\n                // } else if (response.status === 409) {\n                //     alert(data.error);\n                // } else {\n                //     alert(data.error || 'Failed to sign up');\n            }\n\n        } catch (err) {\n            if (err.response) {\n                // Server responded with a status other than 2xx\n                alert(err.response.data.error || 'Failed to sign up');\n            } else if (err.request) {\n                // Request was made but no response received\n                alert('No response from server. Please try again later.');\n            } else {\n                // Something else caused the error\n                alert('Error: ' + err.message);\n            }\n\n            console.error('Signup error:', err);\n            // alert(err.message);\n        }\n    };\n\n    return (\n        <div className=\"form-container\">\n            <header className=\"form-header\">\n                <a href=\"/\" className=\"nav-link\">&larr; BACK</a>\n                <a href=\"/login\" className=\"nav-link\">LOGIN</a>\n            </header>\n            <div className=\"form-content\">\n                <h1>Welcome to CyberHome</h1>\n                <form className=\"form\" onSubmit={handleSubmit}>\n                    <label htmlFor=\"name\" className=\"form-label\">NAME</label>\n                    <input\n                        type=\"text\"\n                        id=\"name\"\n                        className=\"form-input\"\n                        placeholder=\"Enter your name\"\n                        value={name}\n                        onChange={(e) => setName(e.target.value)}\n                    />\n\n                    <label htmlFor=\"username\" className=\"form-label\">USERNAME</label>\n                    <input\n                        type=\"text\"\n                        id=\"username\"\n                        className=\"form-input\"\n                        placeholder=\"Enter your username\"\n                        value={username}\n                        onChange={(e) => setUsername(e.target.value)}\n                    />\n                    <label htmlFor=\"password\" className=\"form-label\">PASSWORD</label>\n                    <div className=\"password-container\">\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            className=\"form-input\"\n                            placeholder=\"Password\"\n                            value={password}\n                            onChange={(e) => setPassword(e.target.value)}\n                        />\n                    </div>\n\n                    <button\n                        type=\"submit\"\n                        className={`form-button ${isFormValid ? 'active' : ''}`}\n                        disabled={!isFormValid}\n                    >\n                        SIGN UP\n                    </button>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default SignUp;","import React from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport './App.css';\nimport Navbar from './components/Navbar/Navbar';\nimport Home from './components/Home/Home';\nimport Login from './components/Forms/Login';\nimport SignUp from './components/Forms/SignUp';\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/login\" element={<Login />} />\n        <Route path=\"/signup\" element={<SignUp />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}